services:
  edirtegna-api:
    container_name: edirtegna-api
    build:
      context: ./backend/
      target: development
    volumes:
      - ./backend:/usr/src/app
      - /etc/localtime:/etc/localtime
      - edirtegna_api_node_modules:/usr/src/app/node_modules
      - images:/usr/src/app/images:rw
    environment:
      NODE_ENV: development
    ports:
      - 3000:3000
    restart: unless-stopped
    command: npm run start:api:dev
    depends_on:
      - edirtegna-db
    networks:
      - edirtegna-front-end-net
      - edirtegna-db-net
      - edirtegna-redis-net

  edirtegna-worker:
    container_name: edirtegna-worker
    build:
      context: ./backend/
      target: development
    volumes:
      - ./backend:/usr/src/app
      - edirtegna_api_node_modules:/app/node_modules
      - /etc/localtime:/etc/localtime
    environment:
      NODE_ENV: development
    restart: unless-stopped
    command: npm run start:job:dev
    networks:
      - edirtegna-front-end-net
      - edirtegna-db-net
      - edirtegna-redis-net

  edirtegna-db:
    container_name: edirtegna-db
    image: mariadb:11.0.2
    volumes:
      - ./DATA/db_data:/var/lib/mysql
    restart: unless-stopped
    environment:
      MARIADB_USER: ${DB_USERNAME}
      MARIADB_PASSWORD: ${DB_PASSWORD}
      MARIADB_DATABASE: ${DB_NAME}
      MARIADB_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      PUID: 1000
      PGID: 1000
      TZ: ${TZ}
    env_file:
      - ./backend/env/development.env
    networks:
      - edirtegna-db-net

  edirtegna-admin:
    container_name: edirtegna-admin
    build:
      dockerfile: Dockerfile.dev
      context: ./apps/admin-web/
      args:
        UID: 1000
        GID: 1000
        # UID: $USER_ID
        # GID: $GROUP_ID
    volumes:
      - ./apps/admin-web:/app
      - edirtegna_admin_ui_node_modules:/app/node_modules
      - /etc/localtime:/etc/localtime
    # command: npm run dev -- --host
    # expose:
    #   - 5173
    # ports:
    #   - 5173:5173
    restart: on-failure:5
    depends_on:
      - edirtegna-api
    networks:
      - edirtegna-front-end-net
    environment:
      CHOKIDAR_USEPOLLING: "true"
      CHOKIDAR_INTERVAL: "100"

  # edirtegna-admin:
  #   container_name: edirtegna-admin
  #   build:
  #     dockerfile: Dockerfile.dev
  #     context: ./apps/
  #     args:
  #       UID: $USER_ID
  #       GID: $GROUP_ID
  #   volumes:
  #     - ./apps:/app
  #     - edirtegna_ui_node_modules:/app/node_modules
  #     - /etc/localtime:/etc/localtime
  #   command: npm run start:admin
  #   restart: on-failure:5
  #   depends_on:
  #     - edirtegna-api
  #   ports:
  #     - 4200:4200
  #   networks:
  #     - edirtegna-front-end-net

  # edirtegna-customer:
  #   container_name: edirtegna-customer
  #   build:
  #     dockerfile: Dockerfile.dev
  #     context: ./apps/
  #     args:
  #       UID: $USER_ID
  #       GID: $GROUP_ID
  #   volumes:
  #     - ./apps:/app
  #     - edirtegna_ui_node_modules:/app/node_modules
  #     - /etc/localtime:/etc/localtime
  #   command: npm run start:customer
  #   restart: on-failure:5
  #   depends_on:
  #     - edirtegna-api
  #   ports:
  #     - "4201:4201"
  #   networks:
  #     - edirtegna-front-end-net

  edirtegna-nginx:
    container_name: edirtegna-nginx
    build:
      context: .
      dockerfile: ./nginx/Dockerfile.dev
      args:
        UID: 1000
        GID: 1000
        # UID: $USER_ID
        # GID: $GROUP_ID
    restart: on-failure:5
    environment:
      NODE_ENV: development
    env_file:
      - ./backend/env/development.env
    ports:
      - 80:80
      # - 5173:5173
    volumes:
      - ./backend/images:/usr/share/nginx/html/images:rw
    networks:
      - edirtegna-front-end-net
    depends_on:
      - edirtegna-admin

  edirtegna-adminer:
    container_name: edirtegna-adminer
    image: adminer:4.8.1
    restart: unless-stopped
    ports:
      - 8085:8080
    networks:
      - edirtegna-db-net
      - edirtegna-front-end-net

  edirtegna-redis:
    image: redis:7.0.12
    container_name: edirtegna-redis
    hostname: redis
    restart: unless-stopped
    sysctls:
      net.core.somaxconn: "4096"
    command:
      - /bin/sh
      - -c
      - redis-server --bind edirtegna-redis --requirepass ${REDIS_PASSWORD} --maxmemory 256mb --maxmemory-policy allkeys-lru --appendonly yes
    environment:
      REDIS_HOST: edirtegna-redis
    env_file:
      - ./backend/env/development.env
    ports:
      - ${REDIS_PORT}:6379
    networks:
      - edirtegna-redis-net

  edirtegna-redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: edirtegna-redis-commander
    env_file:
      - ./backend/env/development.env
    environment:
      REDIS_HOSTS: edirtegna-redis
      REDIS_HOST: edirtegna-redis
      REDIS_PORT: edirtegna-redis:6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      HTTP_USER: ${REDIS_COMMANDER_HTTP_USER}
      HTTP_PASSWORD: ${REDIS_COMMANDER_HTTP_PASSWORD}
    ports:
      - 8086:8081
    networks:
      - edirtegna-front-end-net
      - edirtegna-redis-net

networks:
  edirtegna-db-net:
  edirtegna-front-end-net:
  edirtegna-redis-net:
    driver: bridge
volumes:
  edirtegna_api_node_modules:
  edirtegna_admin_ui_node_modules:
  images:
    # driver: local
    # driver_opts:
    #   type: none
    #   device: ${PWD}/DATA/images
    #   o: bind
  # edirtegna_ui_node_modules:
  # docker-compose --env-file ./backend/env/development.env -p edirtegna -f ./docker-compose.dev.yml up --build -d
  # docker-compose --env-file ./backend/env/development.env -f ./docker-compose.dev.yml build
