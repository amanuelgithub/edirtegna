load_module         modules/ngx_http_headers_more_filter_module.so;
user                nginx nginx;
worker_processes    4;
error_log           /dev/stderr;
pid                 /var/run/nginx.pid;

events { worker_connections  1024;}

http {


  log_format  main        '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';
  #access_log              /var/log/nginx/access.log  main;
  access_log              /dev/stdout;

  proxy_cache_path        /var/cache/nginx levels=1:2 keys_zone=one:8m max_size=3000m inactive=600m;
  proxy_temp_path         /var/tmp;
  include                 mime.types;
  default_type            application/octet-stream;
  sendfile                on;
  keepalive_timeout       65;
  server_tokens           off;
  more_clear_headers      'Server';

  gzip                    on;
  gzip_comp_level         6;
  gzip_vary               on;
  gzip_min_length         1000;
  gzip_proxied            any;
  gzip_types              text/plain text/css  application/javascript application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
  gzip_buffers            16 8k;

  # List of backend api services
  upstream api_servers {
    server iat-api:${API_PORT};
  }

  upstream job_servers {
    server iat-worker:3001;
  }
  # limit_req zone=mylimit:10m  burst=1 nodelay; # Limit 1 req per second
  limit_req_zone $binary_remote_addr zone=mylimit:10m rate=1r/s;
  
  # -----------
  # admin ui
  # -----------
  server {
    listen 80 default_server;
    listen ${ADMIN_APP_PORT} default_server;
    server_name _;
    location / {
      proxy_pass                          http://iat-admin:${ADMIN_APP_PORT}/;
      proxy_http_version                  1.1;
      proxy_set_header Host               $host;
      proxy_set_header X-Real-IP          $remote_addr;
      proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto  $scheme;
    }
    location /images/ {
      alias         /usr/share/nginx/html/images/;
      gzip_static   on;
      expires       max;
      add_header    Cache-Control public;
    }
    location /ng-cli-ws {
      proxy_pass          http://iat-admin:${ADMIN_APP_PORT};
      proxy_http_version  1.1;
      proxy_set_header    Upgrade $http_upgrade;
      proxy_set_header    Connection "Upgrade";
    }
  }

  # -----------
  # customer
  # -----------
  server {
    listen ${CUSTOMER_APP_PORT} default_server;
    server_name _;          
    location /images/ {
      alias /usr/share/nginx/html/images/;
      gzip_static on;
      expires max;
      add_header Cache-Control public;
    }
    location / {
      proxy_pass                          http://iat-customer:${CUSTOMER_APP_PORT};
      proxy_http_version                  1.1;
      proxy_set_header Host               $host;
      proxy_set_header X-Real-IP          $remote_addr;
      proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto  $scheme;
    }
    location /ng-cli-ws {
      proxy_pass                http://iat-customer:${CUSTOMER_APP_PORT};
      proxy_http_version        1.1;
      proxy_set_header          Upgrade $http_upgrade;
      proxy_set_header          Connection "Upgrade";
    }       
  }

  # -----------
  # api
  # -----------
  server {
    listen ${API_PORT} default_server;
    server_name _;
    # Custom JSON response for 429 errors
    error_page 429 = @429;
    location @429 {
      default_type application/json;
      return 429 '{"status": 429, "message": "Too Many Requestsss"}';
    }

    location / {
      limit_req zone=mylimit burst=5;
      limit_req_status 444;  # Set the status code for rate-limited requests
      error_page 444 =200 '{"status": 429, "message": "Too Many Requestsss"}'; # /rate_limit_exceeded.html;
      limit_req_log_level notice;
      limit_req_dry_run on;

      proxy_pass          http://api_servers;
      proxy_http_version  1.1;
      proxy_set_header    Upgrade $http_upgrade;
      proxy_set_header    Connection 'upgrade';
      proxy_set_header    Host $host;
      proxy_set_header    X-Forwarded-For $remote_addr;  # this line
      proxy_set_header    X-Forwarded-Proto  $scheme;
      proxy_cache_bypass  $http_upgrade; 

      # THESE ARE IMPORTANT
      proxy_set_header    X-Real-IP       $remote_addr;
      proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;

      # This is what tells Connect that your session can be considered secure, 
      # even though the protocol node.js sees is only HTTP:
      proxy_set_header      X-NginX-Proxy true;
      proxy_read_timeout    5m;
      proxy_connect_timeout 5m;
      proxy_redirect        off;
      proxy_set_header      Cookie $http_cookie;

      # proxy headers
      proxy_headers_hash_max_size     512;
      proxy_headers_hash_bucket_size  128;        
    }
    location /assets/ {
      alias         /usr/share/nginx/html/assets/;
      gzip_static   on;
      expires       max;
      add_header    Cache-Control public;
    }
    error_page 404    /404.html;
    location = /404.html {
      root      /usr/share/nginx/html;
      internal;
    }
  }

  # -----------
  # jobs
  # -----------
  server {
    listen 3001 default_server;
    server_name _;
    # Custom JSON response for 429 errors
    error_page 429 = @429;
    location @429 {
      default_type application/json;
      return 429 '{"status": 429, "message": "Too Many Requestsss"}';
    }

    location / {
      limit_req zone=mylimit burst=5;
      limit_req_status 444;  # Set the status code for rate-limited requests
      error_page 444 =200 '{"status": 429, "message": "Too Many Requestsss"}'; # /rate_limit_exceeded.html;
      limit_req_log_level notice;
      limit_req_dry_run on;

      proxy_pass          http://job_servers;
      proxy_http_version  1.1;
      proxy_set_header    Upgrade $http_upgrade;
      proxy_set_header    Connection 'upgrade';
      proxy_set_header    Host $host;
      proxy_set_header    X-Forwarded-For $remote_addr;  # this line
      proxy_set_header    X-Forwarded-Proto  $scheme;
      proxy_cache_bypass  $http_upgrade; 

      # THESE ARE IMPORTANT
      proxy_set_header    X-Real-IP       $remote_addr;
      proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;

      # This is what tells Connect that your session can be considered secure, 
      # even though the protocol node.js sees is only HTTP:
      proxy_set_header      X-NginX-Proxy true;
      proxy_read_timeout    5m;
      proxy_connect_timeout 5m;
      proxy_redirect        off;
      proxy_set_header      Cookie $http_cookie;

      # proxy headers
      proxy_headers_hash_max_size     512;
      proxy_headers_hash_bucket_size  128;        
    }
    location /assets/ {
      alias         /usr/share/nginx/html/assets/;
      gzip_static   on;
      expires       max;
      add_header    Cache-Control public;
    }
    error_page 404    /404.html;
    location = /404.html {
      root      /usr/share/nginx/html;
      internal;
    }
  }

  # -----------
  # adminer
  # -----------
  server {
    listen       ${ADMINER_PORT};
    server_name  localhost 10.*;
    location / {
      proxy_pass http://iat-adminer:8080/;
      proxy_http_version 1.1;
      proxy_set_header Host               $host;
      proxy_set_header X-Real-IP          $remote_addr;
      proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto  $scheme;
      proxy_set_header X-NginX-Proxy      true;
    }
  }

  # -----------
  # redis-commander
  # -----------
  server {
    listen       ${REDIS_COMMANDER_PORT};
    server_name  localhost 10.*;
    location / {
      proxy_pass http://iat-redis-commander:8081;
      proxy_http_version 1.1;
      proxy_set_header Host               $host;
      proxy_set_header X-Real-IP          $remote_addr;
      proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto  $scheme;
      proxy_set_header X-NginX-Proxy      true;
    }
  }
}

