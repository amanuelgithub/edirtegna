version: "3.9"

services:
  edirtegna-api:
    image: edirtegna-api:1.0.0
    build:
      context: ./backend/
      target: api
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime
      - /home/svr3/edirtegna-api-logs:/usr/src/app/logs
      - images:/usr/src/app/images:rw
    env_file:
      - backend/env/test.env
    networks:
      - edirtegna-front-end-net
      - edirtegna-db-net
      - edirtegna-redis-net
    depends_on:
      - edirtegna-db
      - edirtegna-redis
      - edirtegna-worker

  edirtegna-worker:
    image: edirtegna-worker:1.0.0
    container_name: edirtegna-worker
    build:
      context: ./backend/
      target: worker
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime
      - images:/usr/src/app/images:rw
    env_file:
      - backend/env/test.env
    networks:
      - edirtegna-front-end-net
      - edirtegna-db-net
      - edirtegna-redis-net
    depends_on:
      - edirtegna-db
      - edirtegna-redis

  edirtegna-db:
    container_name: edirtegna-db
    image: mariadb:11.0.2
    volumes:
      - edirtegna-db-data:/var/lib/mysql
      - ./DATA/db_data:/var/lib/mysql
    restart: unless-stopped
    environment:
      MARIADB_USER: ${DB_USERNAME}
      MARIADB_PASSWORD: ${DB_PASSWORD}
      MARIADB_DATABASE: ${DB_NAME}
      MARIADB_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      PUID: 1000
      PGID: 1000
      TZ: ${TZ}
    env_file:
      - ./backend/env/test.env
    networks:
      - edirtegna-db-net

  edirtegna-nginx:
    container_name: edirtegna-nginx
    image: edirtegna-nginx:1.0.0
    build:
      context: .
      dockerfile: ./nginx/Dockerfile.test
    restart: on-failure:5
    env_file:
      - ./backend/env/test.env
    # depends_on:
    #   - edirtegna-api
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - edirtegna-nginx-letsencrypt:/etc/letsencrypt
      - images:/usr/share/nginx/html/images:ro
    networks:
      - edirtegna-front-end-net
      - edirtegna-app-net

  edirtegna-adminer:
    container_name: edirtegna-adminer
    image: adminer:4.8.1
    restart: unless-stopped
    networks:
      - edirtegna-db-net
      - edirtegna-front-end-net

  edirtegna-redis:
    image: redis:7.0.5
    container_name: edirtegna-redis
    hostname: redis
    restart: unless-stopped
    sysctls:
      net.core.somaxconn: "4096"
    command:
      - /bin/sh
      - -c
      - redis-server --bind edirtegna-redis --requirepass "${REDIS_PASSWORD}" --maxmemory 256mb --maxmemory-policy allkeys-lru --appendonly yes
    environment:
      REDIS_HOST: edirtegna-redis
    env_file:
      - ./backend/env/test.env
    # ports:
    #   - ${REDIS_PORT}:6379
    networks:
      - edirtegna-redis-net

networks:
  edirtegna-db-net:
  edirtegna-front-end-net:
  edirtegna-redis-net:
  edirtegna-app-net:

volumes:
  edirtegna-nginx-letsencrypt:
  edirtegna-db-data:
  images:
